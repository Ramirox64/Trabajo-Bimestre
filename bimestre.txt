def integrar(f:Double => Double, a:Double, b:Double):Double = {
    val x = (a+b)/2
    (b - a)*(f(a) + (4 * f(x) ) + f(b) )/6
}
val valorAbsoluto = (valorEsperado:Double, valorObtenido:Double)=> math.abs(valorEsperado-valorObtenido)
val funcion1 = (x:Double)=> (-x*x)+(8*x)-12
val funcion2 = (x:Double)=>3*(x*x)
val funcion3 = (x:Double)=> x + (2 * x*(math.pow(x,2)))  - (math.pow(x,3)) + 5 * (math.pow(x,4))
val funcion4 = (x:Double)=>((2*x)+1)/(math.pow(x,2)+x)
val funcion5 = (x: Double) => math.exp(x)
val funcion6 = (x: Double) => 1 / math.sqrt(1 + (x * x ))
val funcion7 = (x:Double)=>1/(1+math.pow(x,2))

//1
integrar(funcion1,5,3)
valorAbsoluto(7.33,integrar(funcion1,5,3))
//2
integrar(funcion2,2,0)
valorAbsoluto(8,integrar(funcion2,2,0))
//3
integrar(funcion3,1,-1)
valorAbsoluto(3.333,integrar(funcion3,1,-1))
//4
integrar(funcion4,2,1)
valorAbsoluto(1.09861,integrar(funcion4,2,1))
//5
integrar(funcion5,1,0)
valorAbsoluto(1.71828,integrar(funcion5,1,0))
//6
integrar(funcion6,3,2)
valorAbsoluto(0.8228427,integrar(funcion6,3,2))
//7
integrar(funcion7,1,0)
valorAbsoluto(0.785398,integrar(funcion7,1,0))